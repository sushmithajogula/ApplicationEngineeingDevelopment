/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.CustomerRole;

import Project.SmartCity.Establishment.Item;
import Project.SmartCity.Establishment.Shop;
import Project.SmartCity.Establishment.ShopOrder;
import Project.SmartCity.EstablishmentRoles.Customer;
import Project.SmartCity.SmartCity;
import Project.UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harooniqbal
 */
public class CustomerPlaceOrderShopPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerPlaceOrderShopPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private SmartCity business;

    Customer customer;
    Shop shop;
    Item item;
    ArrayList<Item> items;
    int cost;
    public CustomerPlaceOrderShopPanel(JPanel userProcessContainer, UserAccount account, SmartCity business) {
        initComponents();
        this.business = business;
        this.userAccount = account;
        this.userProcessContainer = userProcessContainer;
        items = new ArrayList<>();
        for (Customer c : business.getCustomerDirectory().getCustomerList()){
            if(c.getUsername().equals(userAccount.getUsername())){
                customer = c;
                break;
            }
        }
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelordercomments = new javax.swing.JLabel();
        jTextFieldordercomments = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableshop = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButtongoto = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableitems = new javax.swing.JTable();
        jButtongoto1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableitemslist = new javax.swing.JTable();
        jTextFieldordercost = new javax.swing.JTextField();
        jLabelordercost = new javax.swing.JLabel();
        jButtonplaceordershop = new javax.swing.JButton();
        jLabelordercomments1 = new javax.swing.JLabel();
        jTextFieldordercomments1 = new javax.swing.JTextField();

        jLabelordercomments.setText("Comments for Order:");

        setBackground(new java.awt.Color(251, 211, 245));

        jScrollPane1.setForeground(new java.awt.Color(0, 51, 51));

        jTableshop.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jTableshop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Name"
            }
        ));
        jScrollPane1.setViewportView(jTableshop);

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setText("Select Shop:");

        jButtongoto.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButtongoto.setForeground(new java.awt.Color(0, 51, 51));
        jButtongoto.setText(">>");
        jButtongoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtongotoActionPerformed(evt);
            }
        });

        jScrollPane2.setForeground(new java.awt.Color(0, 51, 51));

        jTableitems.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jTableitems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item ID", "Name"
            }
        ));
        jScrollPane2.setViewportView(jTableitems);

        jButtongoto1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButtongoto1.setForeground(new java.awt.Color(0, 51, 51));
        jButtongoto1.setText(">>");
        jButtongoto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtongoto1ActionPerformed(evt);
            }
        });

        jScrollPane3.setForeground(new java.awt.Color(0, 51, 51));

        jTableitemslist.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jTableitemslist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item ID", "Name", "Type", "Cost"
            }
        ));
        jScrollPane3.setViewportView(jTableitemslist);

        jTextFieldordercost.setForeground(new java.awt.Color(0, 51, 51));

        jLabelordercost.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabelordercost.setForeground(new java.awt.Color(0, 51, 51));
        jLabelordercost.setText("Cost of Order:");

        jButtonplaceordershop.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButtonplaceordershop.setForeground(new java.awt.Color(0, 51, 51));
        jButtonplaceordershop.setText("Place Order");
        jButtonplaceordershop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonplaceordershopActionPerformed(evt);
            }
        });

        jLabelordercomments1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabelordercomments1.setForeground(new java.awt.Color(0, 51, 51));
        jLabelordercomments1.setText("Comments for Order:");

        jTextFieldordercomments1.setForeground(new java.awt.Color(0, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jButtongoto, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jButtongoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(178, 178, 178)
                            .addComponent(jLabelordercost)
                            .addGap(18, 18, 18)
                            .addComponent(jTextFieldordercost, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(134, 134, 134)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(285, 285, 285)
                                    .addComponent(jButtonplaceordershop))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabelordercomments1)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextFieldordercomments1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jButtongoto))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jButtongoto1)))
                .addGap(87, 87, 87)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelordercost)
                    .addComponent(jTextFieldordercost, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldordercomments1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelordercomments1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jButtonplaceordershop)
                .addGap(57, 57, 57))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonplaceordershopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonplaceordershopActionPerformed
        // TODO add your handling code here:
        ShopOrder shopOrder = shop.getShoporderDirectory().createShopOrder(Integer.toString(cost));
        shopOrder.setComments(jTextFieldordercomments1.getText());
        shopOrder.setItemList(items);
        shopOrder.setStatus("Active");
        
        customer.getShopOrderDirectory().addShopOrder(shopOrder);
        jTextFieldordercost.setText("");
        jTextFieldordercomments1.setText("");
         JOptionPane.showMessageDialog(this, "Order placed.");
    }//GEN-LAST:event_jButtonplaceordershopActionPerformed

    private void jButtongotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtongotoActionPerformed
        // TODO add your handling code here:
        items = new ArrayList<>();
        int selectedRowIndex = jTableshop.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a Shop.");
            return;
        }
        
        DefaultTableModel records = (DefaultTableModel) jTableshop.getModel();
        String name = (String) records.getValueAt(selectedRowIndex, 0);
        
        shop = business.getShopDirectory().getShop(name);
        populateTable2(shop);
    }//GEN-LAST:event_jButtongotoActionPerformed

    private void jButtongoto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtongoto1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = jTableitems.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select an Item.");
            return;
        }
        
        DefaultTableModel records = (DefaultTableModel) jTableitems.getModel();
        int id = (int) records.getValueAt(selectedRowIndex, 0);
        item = shop.getItemDirectory().getItem(id);
        items.add(item);
        populateTable3();
    }//GEN-LAST:event_jButtongoto1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtongoto;
    private javax.swing.JButton jButtongoto1;
    private javax.swing.JButton jButtonplaceordershop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelordercomments;
    private javax.swing.JLabel jLabelordercomments1;
    private javax.swing.JLabel jLabelordercost;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableitems;
    private javax.swing.JTable jTableitemslist;
    private javax.swing.JTable jTableshop;
    private javax.swing.JTextField jTextFieldordercomments;
    private javax.swing.JTextField jTextFieldordercomments1;
    private javax.swing.JTextField jTextFieldordercost;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel records = (DefaultTableModel) jTableshop.getModel();
        records.setRowCount(0); //Clear empty records
        for(Shop o : business.getShopDirectory().getShopList()){
            Object[] row = new Object[1];
            row[0] = o.getName();
            
            records.addRow(row);
        }
    }

    private void populateTable2(Shop shop) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel records = (DefaultTableModel) jTableitems.getModel();
        records.setRowCount(0); //Clear empty records
        for(Item o : shop.getItemDirectory().getItemList()){
            Object[] row = new Object[2];
            row[0] = o.getId();
            row[1] = o.getName();
            records.addRow(row);
        }
    }

    private void populateTable3() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel records = (DefaultTableModel) jTableitemslist.getModel();
        records.setRowCount(0); //Clear empty records
        cost = 0;
        for(Item o : items){
            Object[] row = new Object[4];
            row[0] = o.getId();
            row[1] = o.getName();
            row[2] = o.getType();
            row[3] = o.getCost();
            cost = cost + Integer.parseInt(o.getCost());
            records.addRow(row);
        }
        jTextFieldordercost.setText(Integer.toString(cost));
    }
}
