/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.CustomerRole;

import Project.SmartCity.Establishment.MenuItem;
import Project.SmartCity.Establishment.Order;
import Project.SmartCity.Establishment.Restaurant;
import Project.SmartCity.EstablishmentRoles.Customer;
import Project.SmartCity.SmartCity;
import Project.UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harooniqbal
 */
public class CustomerPlaceOrderRestaurantPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerPlaceOrderRestaurantPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private SmartCity business;

    Customer customer;
    Restaurant restaurant;
    MenuItem item;
    ArrayList<MenuItem> items;
    int cost;
    
    public CustomerPlaceOrderRestaurantPanel(JPanel userProcessContainer, UserAccount account, SmartCity business) {
        initComponents();
        this.business = business;
        this.userAccount = account;
        this.userProcessContainer = userProcessContainer;
        items = new ArrayList<>();
        for (Customer c : business.getCustomerDirectory().getCustomerList()){
            if(c.getUsername().equals(userAccount.getUsername())){
                customer = c;
                break;
            }
        }
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldordercost = new javax.swing.JTextField();
        jLabelordercost = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablerest = new javax.swing.JTable();
        jButtonplaceordershop = new javax.swing.JButton();
        jLabelselectrest = new javax.swing.JLabel();
        jButtongoto = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablemenuitems = new javax.swing.JTable();
        jButtongoto1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablemenuitemslist = new javax.swing.JTable();
        jLabelordercomments = new javax.swing.JLabel();
        jTextFieldordercomments = new javax.swing.JTextField();

        setBackground(new java.awt.Color(251, 211, 245));
        setForeground(new java.awt.Color(0, 51, 51));

        jTextFieldordercost.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jTextFieldordercost.setForeground(new java.awt.Color(0, 51, 51));

        jLabelordercost.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jLabelordercost.setForeground(new java.awt.Color(0, 51, 51));
        jLabelordercost.setText("Cost of Order:");

        jTablerest.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jTablerest.setForeground(new java.awt.Color(0, 51, 51));
        jTablerest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Name"
            }
        ));
        jScrollPane1.setViewportView(jTablerest);

        jButtonplaceordershop.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jButtonplaceordershop.setForeground(new java.awt.Color(0, 51, 51));
        jButtonplaceordershop.setText("Place Order");
        jButtonplaceordershop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonplaceordershopActionPerformed(evt);
            }
        });

        jLabelselectrest.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jLabelselectrest.setForeground(new java.awt.Color(0, 51, 51));
        jLabelselectrest.setText("Select Restaurant:");

        jButtongoto.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jButtongoto.setForeground(new java.awt.Color(0, 51, 51));
        jButtongoto.setText(">>");
        jButtongoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtongotoActionPerformed(evt);
            }
        });

        jTablemenuitems.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jTablemenuitems.setForeground(new java.awt.Color(0, 51, 51));
        jTablemenuitems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Menu"
            }
        ));
        jScrollPane2.setViewportView(jTablemenuitems);

        jButtongoto1.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jButtongoto1.setForeground(new java.awt.Color(0, 51, 51));
        jButtongoto1.setText(">>");
        jButtongoto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtongoto1ActionPerformed(evt);
            }
        });

        jTablemenuitemslist.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jTablemenuitemslist.setForeground(new java.awt.Color(0, 51, 51));
        jTablemenuitemslist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MenuItem ID", "Name", "Type", "Cost", "Calories"
            }
        ));
        jScrollPane3.setViewportView(jTablemenuitemslist);

        jLabelordercomments.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jLabelordercomments.setForeground(new java.awt.Color(0, 51, 51));
        jLabelordercomments.setText("Comments for Order:");

        jTextFieldordercomments.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jTextFieldordercomments.setForeground(new java.awt.Color(0, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelselectrest)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jButtongoto, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jButtongoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelordercomments)
                            .addComponent(jLabelordercost))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldordercomments, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                            .addComponent(jTextFieldordercost))))
                .addContainerGap(68, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(403, 403, 403)
                .addComponent(jButtonplaceordershop)
                .addGap(0, 450, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelselectrest)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtongoto)
                            .addComponent(jButtongoto1))))
                .addGap(65, 65, 65)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldordercost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelordercost))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldordercomments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelordercomments))
                .addGap(49, 49, 49)
                .addComponent(jButtonplaceordershop)
                .addGap(72, 72, 72))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonplaceordershopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonplaceordershopActionPerformed
        // TODO add your handling code here:
        Order order = restaurant.getOrderDirectory().createOrder(Integer.toString(cost));
        order.setComments(jTextFieldordercomments.getText());
        order.setItemList(items);
        order.setStatus("Active");
        
        customer.getOrderDirectory().addOrder(order);
        jTextFieldordercost.setText("");
        jTextFieldordercomments.setText("");
         JOptionPane.showMessageDialog(this, "Order placed");
    }//GEN-LAST:event_jButtonplaceordershopActionPerformed

    private void jButtongotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtongotoActionPerformed
        // TODO add your handling code here:
        items = new ArrayList<>();
        int selectedRowIndex = jTablerest.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a Restaurant.");
            return;
        }
        
        DefaultTableModel records = (DefaultTableModel) jTablerest.getModel();
        String name = (String) records.getValueAt(selectedRowIndex, 0);
        
        restaurant = business.getRestaurantDirectory().getRestaurant(name);
        populateTable2(restaurant);
    }//GEN-LAST:event_jButtongotoActionPerformed

    private void jButtongoto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtongoto1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTablemenuitems.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a MenuItem.");
            return;
        }
        
        DefaultTableModel records = (DefaultTableModel) jTablemenuitems.getModel();
        String name = (String) records.getValueAt(selectedRowIndex, 0);
        item = restaurant.getMenu().getItem(name);
        items.add(item);
        populateTable3();
    }//GEN-LAST:event_jButtongoto1ActionPerformed

    private void populateTable() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel records = (DefaultTableModel) jTablerest.getModel();
        records.setRowCount(0); //Clear empty records
        for(Restaurant o : business.getRestaurantDirectory().getRestaurantList()){
            Object[] row = new Object[1];
            row[0] = o.getName();
            
            records.addRow(row);
        }
    }

    private void populateTable2(Restaurant restaurant) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel records = (DefaultTableModel) jTablemenuitems.getModel();
        records.setRowCount(0); //Clear empty records
        for(MenuItem o : restaurant.getMenu().getItemList()){
            Object[] row = new Object[1];
            row[0] = o.getName();
            records.addRow(row);
        }
    }

    private void populateTable3() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel records = (DefaultTableModel) jTablemenuitemslist.getModel();
        records.setRowCount(0); //Clear empty records
        cost = 0;
        int i = 0;
        for(MenuItem o : items){
            Object[] row = new Object[5];
            row[0] = ++i;
            row[1] = o.getName();
            row[2] = o.getType();
            row[3] = o.getCost();
            row[4] = o.getCal();
            cost = cost + Integer.parseInt(o.getCost());
            records.addRow(row);
        }
        jTextFieldordercost.setText(Integer.toString(cost));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtongoto;
    private javax.swing.JButton jButtongoto1;
    private javax.swing.JButton jButtonplaceordershop;
    private javax.swing.JLabel jLabelordercomments;
    private javax.swing.JLabel jLabelordercost;
    private javax.swing.JLabel jLabelselectrest;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTablemenuitems;
    private javax.swing.JTable jTablemenuitemslist;
    private javax.swing.JTable jTablerest;
    private javax.swing.JTextField jTextFieldordercomments;
    private javax.swing.JTextField jTextFieldordercost;
    // End of variables declaration//GEN-END:variables
}
