/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.ShopAdminRole;

import Project.SmartCity.Establishment.Item;
import Project.SmartCity.Establishment.Shop;
import Project.SmartCity.Establishment.ShopDirectory;
import Project.SmartCity.Establishment.ShopOrder;
import Project.SmartCity.Establishment.ShopOrderDirectory;
import Project.SmartCity.SmartCity;
import Project.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harooniqbal
 */
public class ShopAdminManageOrdersPanel extends javax.swing.JPanel {

    /**
     * Creates new form ShopAdminManageOrdersPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private SmartCity business;
    Shop shop;
    
    public ShopAdminManageOrdersPanel(JPanel userProcessContainer, UserAccount account, SmartCity business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        for(Shop s:business.getShopDirectory().getShopList()){
            if(s.getUsername().equals(userAccount.getUsername())){
                shop = s;
                break;
        }
        }
            
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        orderListtbl = new javax.swing.JScrollPane();
        orderlisttbl = new javax.swing.JTable();
        viewOrderbtn = new javax.swing.JButton();
        ordertbl = new javax.swing.JScrollPane();
        ordercontentstbl = new javax.swing.JTable();
        processbtn = new javax.swing.JButton();
        processbtn1 = new javax.swing.JButton();
        assignbtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(212, 217, 235));
        setForeground(new java.awt.Color(0, 51, 51));

        jLabel1.setBackground(new java.awt.Color(210, 210, 240));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        orderlisttbl.setForeground(new java.awt.Color(0, 51, 51));
        orderlisttbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Order ID", "Status", "Order Comments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderListtbl.setViewportView(orderlisttbl);

        viewOrderbtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        viewOrderbtn.setForeground(new java.awt.Color(0, 51, 51));
        viewOrderbtn.setText(">>");
        viewOrderbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderbtnActionPerformed(evt);
            }
        });

        ordertbl.setBackground(new java.awt.Color(212, 217, 235));

        ordercontentstbl.setForeground(new java.awt.Color(0, 51, 51));
        ordercontentstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ordertbl.setViewportView(ordercontentstbl);

        processbtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        processbtn.setForeground(new java.awt.Color(0, 51, 51));
        processbtn.setText("Accept Order");
        processbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processbtnActionPerformed(evt);
            }
        });

        processbtn1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        processbtn1.setForeground(new java.awt.Color(0, 51, 51));
        processbtn1.setText("Reject Order");
        processbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processbtn1ActionPerformed(evt);
            }
        });

        assignbtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        assignbtn.setForeground(new java.awt.Color(0, 51, 51));
        assignbtn.setText("Process Order");
        assignbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignbtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(25, 56, 82));
        jLabel6.setText("LIST OF ORDERS FOR SHOP");

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 51));
        jLabel7.setText("Select Order:");

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 51));
        jLabel8.setText("View Order:");

        jLabel11.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/restordericon.png")); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/shoporder.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(275, 275, 275)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(550, 550, 550)
                                    .addComponent(processbtn)
                                    .addGap(57, 57, 57)
                                    .addComponent(processbtn1))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(orderListtbl, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(40, 40, 40)
                                            .addComponent(viewOrderbtn)
                                            .addGap(26, 26, 26))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(401, 401, 401)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(ordertbl, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(367, 367, 367)
                                .addComponent(assignbtn)))))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1)))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ordertbl, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(viewOrderbtn))
                    .addComponent(orderListtbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(processbtn)
                    .addComponent(processbtn1))
                .addGap(30, 30, 30)
                .addComponent(assignbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewOrderbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderbtnActionPerformed

        int selectedRowIndex = orderlisttbl.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be viewed.");
            return;
        }

        DefaultTableModel records = (DefaultTableModel) orderlisttbl.getModel();

        Integer id = (Integer) records.getValueAt(selectedRowIndex, 0);
        ShopOrder order = shop.getShoporderDirectory().getShopOrder(id);
        //        Order order = (Order) records.getValueAt(selectedRowIndex, 0);
        //        itemList.add(item);
        populateTable2(order);
    }//GEN-LAST:event_viewOrderbtnActionPerformed

    private void processbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processbtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = orderlisttbl.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be Accepted.");
            return;
        }

        DefaultTableModel records = (DefaultTableModel) orderlisttbl.getModel();
        Integer id = (Integer) records.getValueAt(selectedRowIndex, 0);
        ShopOrder order = shop.getShoporderDirectory().getShopOrder(id);
        //        Order order = (Order) records.getValueAt(selectedRowIndex, 0);
        //        itemList.add(item);
        order.setStatus("Accepted");
        shop.setRevenue(Integer.toString(Integer.parseInt(shop.getRevenue())+Integer.parseInt(order.getCost())));
        JOptionPane.showMessageDialog(this, "Order Accepted.");
        populateTable();
    }//GEN-LAST:event_processbtnActionPerformed

    private void processbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processbtn1ActionPerformed
        // TODO add your handling code here:
         int selectedRowIndex = orderlisttbl.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be Rejected.");
            return;
        }

        DefaultTableModel records = (DefaultTableModel) orderlisttbl.getModel();
        Integer id = (Integer) records.getValueAt(selectedRowIndex, 0);
       ShopOrder order = shop.getShoporderDirectory().getShopOrder(id);
        //        Order order = (Order) records.getValueAt(selectedRowIndex, 0);
        //        itemList.add(item);
        order.setStatus("Rejected");
        shop.setRevenue(Integer.toString(Integer.parseInt(shop.getRevenue())-Integer.parseInt(order.getCost())));
        JOptionPane.showMessageDialog(this, "Order Rejected.");
        populateTable();
    }//GEN-LAST:event_processbtn1ActionPerformed

    private void assignbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignbtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = orderlisttbl.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be processed.");
            return;
        }

        DefaultTableModel records = (DefaultTableModel) orderlisttbl.getModel();
        Integer id = (Integer) records.getValueAt(selectedRowIndex, 0);
       ShopOrder order = shop.getShoporderDirectory().getShopOrder(id);
        //        Order order = (Order) records.getValueAt(selectedRowIndex, 0);
        //        itemList.add(item);
        order.setStatus("Completed");
        JOptionPane.showMessageDialog(this, "Order Completed.");
        populateTable();
    }//GEN-LAST:event_assignbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane orderListtbl;
    private javax.swing.JTable ordercontentstbl;
    private javax.swing.JTable orderlisttbl;
    private javax.swing.JScrollPane ordertbl;
    private javax.swing.JButton processbtn;
    private javax.swing.JButton processbtn1;
    private javax.swing.JButton viewOrderbtn;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
       //ShopDirectory shopDirectory = business.getShopDirectory();
        DefaultTableModel records = (DefaultTableModel) orderlisttbl.getModel();
        records.setRowCount(0); //Clear empty records
        
        for(ShopOrder o : shop.getShoporderDirectory().getOrderList()){
//            if(o.getStatus().equals("Active")){
                Object[] row = new Object[3];
                row[0] = o.getId();
                //row[0] = vs.getDate();
                row[1] = o.getStatus();
                row[2] = o.getComments();
                
                records.addRow(row);
//            }
        }
    }

    private void populateTable2(ShopOrder order) {
        DefaultTableModel records = (DefaultTableModel) ordercontentstbl.getModel();
        records.setRowCount(0); //Clear empty records
        
        for(Item i : order.getItemList()){
//            if(o.getStatus().equals("Active")){
                Object[] row = new Object[2];
                row[0] = i.getName();
                //row[0] = vs.getDate();
                row[1] = 1;
                //row[2] = o.getComments();
                
                records.addRow(row);
//            }
        }
    }
    
}
