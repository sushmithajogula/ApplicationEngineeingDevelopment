/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.ShopAdminRole;

import Project.SmartCity.Establishment.Item;
import Project.SmartCity.Establishment.ItemDirectory;
import Project.SmartCity.Establishment.Shop;
import Project.SmartCity.SmartCity;
import Project.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harooniqbal
 */
public class ShopAdminManageItemsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ShopAdminManageItemsPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private SmartCity business;
    Shop shop;
    
    public ShopAdminManageItemsPanel(JPanel userProcessContainer, UserAccount account, SmartCity business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        for(Shop s:business.getShopDirectory().getShopList()){
            if(s.getUsername().equals(userAccount.getUsername())){
                shop = s;
                break;
        }
        }
        itemtxt.setEnabled(false);
        typetxt.setEnabled(false);
        costtxt.setEnabled(false);
        addbtn.setEnabled(false); 
        confirmupdatebtn.setEnabled(false);  
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        costtxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        addbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemstbl = new javax.swing.JTable();
        jLabeltype = new javax.swing.JLabel();
        typetxt = new javax.swing.JTextField();
        plusbtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        minusbtn = new javax.swing.JButton();
        confirmupdatebtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        itemtxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(212, 217, 235));
        setForeground(new java.awt.Color(0, 51, 51));

        costtxt.setForeground(new java.awt.Color(0, 51, 51));
        costtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costtxtActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(210, 210, 240));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));

        addbtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        addbtn.setForeground(new java.awt.Color(0, 51, 51));
        addbtn.setText("Add to List");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        itemstbl.setForeground(new java.awt.Color(0, 51, 51));
        itemstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item", "Type", "Item Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(itemstbl);

        jLabeltype.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabeltype.setForeground(new java.awt.Color(0, 51, 51));
        jLabeltype.setText("Type");

        typetxt.setForeground(new java.awt.Color(0, 51, 51));
        typetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typetxtActionPerformed(evt);
            }
        });

        plusbtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        plusbtn.setForeground(new java.awt.Color(0, 51, 51));
        plusbtn.setText("Add Item");
        plusbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusbtnActionPerformed(evt);
            }
        });

        updatebtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(0, 51, 51));
        updatebtn.setText("Update Item");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        minusbtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        minusbtn.setForeground(new java.awt.Color(0, 51, 51));
        minusbtn.setText("Remove Item");
        minusbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusbtnActionPerformed(evt);
            }
        });

        confirmupdatebtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        confirmupdatebtn.setForeground(new java.awt.Color(0, 51, 51));
        confirmupdatebtn.setText("Confirm Update");
        confirmupdatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmupdatebtnActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(210, 210, 240));
        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 51));
        jLabel2.setText("Item");

        itemtxt.setForeground(new java.awt.Color(0, 51, 51));
        itemtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemtxtActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 51));
        jLabel3.setText("Item Cost");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(25, 56, 82));
        jLabel6.setText("SHOP ITEMS");

        jLabel4.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/shopitems.png")); // NOI18N

        jLabel11.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/shopitemsicon.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(256, 256, 256)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(plusbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(minusbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)
                            .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(44, 44, 44))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(107, 107, 107)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(itemtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(58, 58, 58)
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(costtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(58, 58, 58)
                                    .addComponent(jLabeltype, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(typetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 200, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(addbtn)
                .addGap(160, 160, 160)
                .addComponent(confirmupdatebtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plusbtn)
                    .addComponent(minusbtn)
                    .addComponent(updatebtn))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabeltype)
                        .addComponent(typetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(itemtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(costtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addbtn)
                    .addComponent(confirmupdatebtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void costtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costtxtActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        // TODO add your handling code here:
        try{
            
                    
                            ItemDirectory itemdirec = shop.getItemDirectory();
                            Item item = itemdirec.createItem(itemtxt.getText());
                            item.setType(typetxt.getText());
                            item.setCost(costtxt.getText());
                            shop.setItemDirectory(itemdirec);
                            populateTable();
                            typetxt.setText("");
                            costtxt.setText("");
                            itemtxt.setText("");
                            typetxt.setEnabled(false);
                            costtxt.setEnabled(false);
                            itemtxt.setEnabled(false);
                            addbtn.setEnabled(false); 
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(this, e);
                        }
                   
        populateTable();
                   
  
    }//GEN-LAST:event_addbtnActionPerformed

    private void typetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typetxtActionPerformed

    private void plusbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusbtnActionPerformed
        // TODO add your handling code here:
         itemtxt.setEnabled(true);
        typetxt.setEnabled(true);
        costtxt.setEnabled(true);
        addbtn.setEnabled(true);
    }//GEN-LAST:event_plusbtnActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        itemtxt.setEnabled(true);
        typetxt.setEnabled(true);
        costtxt.setEnabled(true);
        confirmupdatebtn.setEnabled(true);
        int selectedRowIndex = itemstbl.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be updated.");
            return;
        }
         DefaultTableModel records = (DefaultTableModel) itemstbl.getModel();
        String name = (String) records.getValueAt(selectedRowIndex, 0);
        Item item = shop.getItemDirectory().getItem(name);
        itemtxt.setText(item.getName());
        typetxt.setText(item.getType());
        costtxt.setText(item.getCost());
    }//GEN-LAST:event_updatebtnActionPerformed

    private void minusbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusbtnActionPerformed
        // TODO add your handling code here:
         int selectedRowIndex = itemstbl.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be deleted.");
            return;
        }

        DefaultTableModel records = (DefaultTableModel) itemstbl.getModel();
        String name = (String) records.getValueAt(selectedRowIndex, 0);
        Item item = shop.getItemDirectory().getItem(name);
        shop.getItemDirectory().getItemList().remove(item);
        populateTable();
        //menu.removeItem();
    }//GEN-LAST:event_minusbtnActionPerformed

    private void confirmupdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmupdatebtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = itemstbl.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be updated.");
            return;
        }

        DefaultTableModel records = (DefaultTableModel) itemstbl.getModel();
        String name = (String) records.getValueAt(selectedRowIndex, 0);
        Item item = shop.getItemDirectory().getItem(name);
        item.setName(itemtxt.getText());
        item.setType(typetxt.getText());
        item.setCost(costtxt.getText());
        typetxt.setText("");
                            costtxt.setText("");
                            itemtxt.setText("");
                            typetxt.setEnabled(false);
                            costtxt.setEnabled(false);
                            itemtxt.setEnabled(false);
                            confirmupdatebtn.setEnabled(false); 
        populateTable();
    }//GEN-LAST:event_confirmupdatebtnActionPerformed

    private void itemtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemtxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JButton confirmupdatebtn;
    private javax.swing.JTextField costtxt;
    private javax.swing.JTable itemstbl;
    private javax.swing.JTextField itemtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabeltype;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton minusbtn;
    private javax.swing.JButton plusbtn;
    private javax.swing.JTextField typetxt;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    //Shop restaurant = business.getRestaurantDirectory().getRestaurantList().get(0);
        
        DefaultTableModel records = (DefaultTableModel) itemstbl.getModel();
        records.setRowCount(0); //Clear empty records
        
        for(Item i : shop.getItemDirectory().getItemList()){
            Object[] row = new Object[3];
            row[0] = i.getName();
            //row[0] = vs.getDate();
            row[1] = i.getType();
            row[2] = i.getCost();
            
            records.addRow(row);
        }
    }
    
}
