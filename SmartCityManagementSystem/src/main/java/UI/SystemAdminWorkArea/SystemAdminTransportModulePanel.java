/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.SystemAdminWorkArea;

import Project.SmartCity.Establishment.MenuItem;
import Project.SmartCity.HealthcareSystem.Hospital;
import Project.SmartCity.HealthcareSystem.HospitalDirectory;
import Project.SmartCity.HealthcareSystem.Pharmacy;
import Project.SmartCity.HealthcareSystem.PharmacyDirectory;
import Project.SmartCity.SmartCity;
import Project.SmartCity.TransportationSystem.Bus;
import Project.SmartCity.TransportationSystem.BusDirectory;
import Project.SmartCity.TransportationSystem.Cruise;
import Project.SmartCity.TransportationSystem.CruiseDirectory;
import Project.SmartCity.TransportationSystem.Flight;
import Project.SmartCity.TransportationSystem.FlightDirectory;
import Project.SmartCity.TransportationSystem.Train;
import Project.SmartCity.TransportationSystem.TrainDirectory;
import Project.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harooniqbal
 */
public class SystemAdminTransportModulePanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminTransportModulePanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private SmartCity business;
    
    String type="",picPath = "";
    public SystemAdminTransportModulePanel(JPanel userProcessContainer, UserAccount account, SmartCity business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        idtxt.setEnabled(false);
        idtxt.setEnabled(false);
        startloctxt.setEnabled(false);
        droploctxt.setEnabled(false);
        //caltxt.setEnabled(true);
        addbtn.setEnabled(false);
        confirmupdatebtn.setEnabled(false); 
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        idlabel = new javax.swing.JLabel();
        jLabeltype = new javax.swing.JLabel();
        idtxt = new javax.swing.JTextField();
        startloctxt = new javax.swing.JTextField();
        addbtn = new javax.swing.JButton();
        confirmupdatebtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabeltype1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        droploctxt = new javax.swing.JTextField();
        jButtonbus = new javax.swing.JButton();
        jButtontrain = new javax.swing.JButton();
        jButtonflight = new javax.swing.JButton();
        jButtoncruise = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        numtxt = new javax.swing.JTextField();

        setBackground(new java.awt.Color(242, 228, 199));

        jButton2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 51));
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 51, 51));
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        idlabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        idlabel.setForeground(new java.awt.Color(0, 51, 51));
        idlabel.setText("ID:");

        jLabeltype.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabeltype.setForeground(new java.awt.Color(0, 51, 51));
        jLabeltype.setText("Start Location:");

        idtxt.setForeground(new java.awt.Color(0, 51, 51));
        idtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idtxtActionPerformed(evt);
            }
        });

        startloctxt.setForeground(new java.awt.Color(0, 51, 51));
        startloctxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startloctxtActionPerformed(evt);
            }
        });

        addbtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        addbtn.setForeground(new java.awt.Color(0, 51, 51));
        addbtn.setText("Add to List");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        confirmupdatebtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        confirmupdatebtn.setForeground(new java.awt.Color(0, 51, 51));
        confirmupdatebtn.setText("Confirm Update");
        confirmupdatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmupdatebtnActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Number"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabeltype1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabeltype1.setForeground(new java.awt.Color(0, 51, 51));
        jLabeltype1.setText("Drop Location:");

        jButton1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 51, 51));
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        droploctxt.setForeground(new java.awt.Color(0, 51, 51));
        droploctxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                droploctxtActionPerformed(evt);
            }
        });

        jButtonbus.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/Bus (1).png")); // NOI18N
        jButtonbus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbusActionPerformed(evt);
            }
        });

        jButtontrain.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/Train (1).png")); // NOI18N
        jButtontrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtontrainActionPerformed(evt);
            }
        });

        jButtonflight.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/Flight (1).png")); // NOI18N
        jButtonflight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonflightActionPerformed(evt);
            }
        });

        jButtoncruise.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/Cruise_3 (1).png")); // NOI18N
        jButtoncruise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtoncruiseActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(25, 56, 82));
        jLabel6.setText("SYSTEM ADMIN TRANSPORTATION MODULE");

        jLabel10.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/sysadminlogo.png")); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/CommuteWorkAreaRightPane.png")); // NOI18N

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 51));
        jLabel4.setText("Number:");

        numtxt.setForeground(new java.awt.Color(0, 51, 51));
        numtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numtxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(238, 238, 238)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(18, 18, 18)
                                                .addComponent(numtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(idlabel)
                                                .addGap(18, 18, 18)
                                                .addComponent(idtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(201, 201, 201)
                                .addComponent(jButtonbus)
                                .addGap(76, 76, 76)
                                .addComponent(jButtontrain)
                                .addGap(72, 72, 72)
                                .addComponent(jButtonflight)
                                .addGap(92, 92, 92)
                                .addComponent(jButtoncruise))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(426, 426, 426)
                                .addComponent(jButton1)
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton2)
                                        .addGap(66, 66, 66)
                                        .addComponent(jButton3))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabeltype1)
                                        .addComponent(jLabeltype, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(confirmupdatebtn)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(493, 493, 493)
                                .addComponent(addbtn)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(startloctxt, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                    .addComponent(droploctxt))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 144, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonflight, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonbus)
                                .addComponent(jButtontrain)
                                .addComponent(jButtoncruise, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(idtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idlabel))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabeltype)
                                .addComponent(startloctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabeltype1)
                            .addComponent(droploctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(numtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addbtn)
                            .addComponent(confirmupdatebtn))
                        .addGap(175, 175, 175))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void idtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idtxtActionPerformed

    private void startloctxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startloctxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startloctxtActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        // TODO add your handling code here:
       String startlocation = startloctxt.getText();
       String droplocation = droploctxt.getText();
       try{
            
                    switch(type){
            case "Bus":
                BusDirectory hospdirec = business.getBusDirectory();
                Bus h = hospdirec.createBus(idtxt.getText(), startlocation,droplocation,userAccount.getUsername());
               
                break;
            case "Train":
                TrainDirectory traindirec = business.getTrainDirectory();
                Train ph = traindirec.createTrain(idtxt.getText(), startlocation,droplocation,userAccount.getUsername());
                break;
                case "Flight":
                FlightDirectory flightdirec = business.getFlightDirectory();
                Flight hf = flightdirec.createFlight(idtxt.getText(), startlocation,droplocation,userAccount.getUsername());
               
                break;
                case "Cruise":
                CruiseDirectory cruisedirec = business.getCruiseDirectory();
                Cruise ch = cruisedirec.createCruise(idtxt.getText(), startlocation,droplocation,userAccount.getUsername());
               
                break;
            
            default:
                JOptionPane.showMessageDialog(this, "Please select either bus, train, flight, or cruise.");
                return;
        }
                            
                            idtxt.setText("");
                            startloctxt.setText("");
                            droploctxt.setText("");
                            idtxt.setText("");
                          idtxt.setEnabled(false);
        idtxt.setEnabled(false);
        startloctxt.setEnabled(false);
        droploctxt.setEnabled(false);
        addbtn.setEnabled(false);
                    }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(this, e);
                        }
                   populateTable();
    }//GEN-LAST:event_addbtnActionPerformed

    private void confirmupdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmupdatebtnActionPerformed
        // TODO add your handling code here:
        String startlocation = "41";
        String droplocation = "90";
       int selectedRowIndex = jTable1.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be updated.");
            return;
        }

        DefaultTableModel records = (DefaultTableModel) jTable1.getModel();
        Integer number = (Integer) records.getValueAt(selectedRowIndex, 0);
        
         switch(type){
            case "Bus":
                BusDirectory hospdirec = business.getBusDirectory();
                Bus h = hospdirec.getBus(number);
                h.setNumber(idtxt.getText());
        h.setId(Integer.parseInt(idlabel.getText()));
        h.setStartLocation(startlocation);
        h.setDropLocation(droplocation);
        
               
                break;
            case "Train":
                TrainDirectory traindirec = business.getTrainDirectory();
                Train th = traindirec.getTrain(number);
                th.setNumber(idtxt.getText());
        th.setId(Integer.parseInt(idlabel.getText()));
        th.setStartLocation(startlocation);
        th.setDropLocation(droplocation);
        
               
                break;
                case "Flight":
                FlightDirectory flightdirec = business.getFlightDirectory();
                Flight fh = flightdirec.getFlight(number);
                fh.setNumber(idtxt.getText());
        fh.setId(Integer.parseInt(idlabel.getText()));
        fh.setStartLocation(startlocation);
        fh.setDropLocation(droplocation);
        
               
                break;
                case "Cruise":
                CruiseDirectory cruisedirec = business.getCruiseDirectory();
                Cruise ch = cruisedirec.getCruise(number);
                ch.setNumber(idtxt.getText());
        ch.setId(Integer.parseInt(idlabel.getText()));
        ch.setStartLocation(startlocation);
        ch.setDropLocation(droplocation);
        
               
                break;
            
            default:
                JOptionPane.showMessageDialog(this, "Please select either bus, train, flight, or cruise.");
                return;
        }
      
        idlabel.setText("");
                            idtxt.setText("");
                            startloctxt.setText("");
                            droploctxt.setText("");
                            // caltxt.setText("");
                            idlabel.setEnabled(false);
                            idtxt.setEnabled(false);
                            startloctxt.setEnabled(false);
                            droploctxt.setEnabled(false);
                            //caltxt.setEnabled(false);
                            confirmupdatebtn.setEnabled(false); 
                            populateTable();
    }//GEN-LAST:event_confirmupdatebtnActionPerformed

    private void droploctxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_droploctxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_droploctxtActionPerformed

    private void jButtonbusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbusActionPerformed
        // TODO add your handling code here:
        type = "Bus";
        populateTable();
    }//GEN-LAST:event_jButtonbusActionPerformed

    private void jButtontrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtontrainActionPerformed
        // TODO add your handling code here:
        type = "Train";
        populateTable();
    }//GEN-LAST:event_jButtontrainActionPerformed

    private void jButtonflightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonflightActionPerformed
        // TODO add your handling code here:
        type = "Flight";
        populateTable();
    }//GEN-LAST:event_jButtonflightActionPerformed

    private void jButtoncruiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtoncruiseActionPerformed
        // TODO add your handling code here:
        type = "Cruise";
        populateTable();
    }//GEN-LAST:event_jButtoncruiseActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        idlabel.setEnabled(true);
        idtxt.setEnabled(true);
        startloctxt.setEnabled(true);
        droploctxt.setEnabled(true);
        //caltxt.setEnabled(true);
        addbtn.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTable1.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be deleted.");
            return;
        }
        DefaultTableModel records = (DefaultTableModel) jTable1.getModel();
        Integer id = (Integer) records.getValueAt(selectedRowIndex, 0);
        switch(type){
            case "Bus":
                
        BusDirectory hosdirec = business.getBusDirectory();
        Bus h = hosdirec.getBus(id);
        hosdirec.removeBus(h);
        
               
                break;
            case "Train":
                
        TrainDirectory traindirec = business.getTrainDirectory();
        Train ht = traindirec.getTrain(id);
        traindirec.removeTrain(ht);
        
               
                break;
                case "Flight":
                
        FlightDirectory flightdirec = business.getFlightDirectory();
        Flight fh = flightdirec.getFlight(id);
        flightdirec.removeFlight(fh);
        
               
                break;
                case "Cruise":
                
        CruiseDirectory cruisedirec = business.getCruiseDirectory();
        Cruise ch = cruisedirec.getCruise(id);
        cruisedirec.removeCruise(ch);
        
               
                break;
            
            default:
                JOptionPane.showMessageDialog(this, "Please select either bus, train, flight, or cruise.");
                return;
        }
        
        

       
        populateTable();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        idlabel.setEnabled(true);
        idtxt.setEnabled(true);
        startloctxt.setEnabled(true);
        droploctxt.setEnabled(true);
        //caltxt.setEnabled(true);
        confirmupdatebtn.setEnabled(true);
        int selectedRowIndex = jTable1.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be updated.");
            return;
        }
         DefaultTableModel records = (DefaultTableModel) jTable1.getModel();
        Integer id = (Integer) records.getValueAt(selectedRowIndex, 0);
        switch(type){
            case "Bus":
                
        BusDirectory hosdirec = business.getBusDirectory();
        Bus h = hosdirec.getBus(id);
        idlabel.setText(Integer.toString(h.getId()));
        idtxt.setText(h.getNumber());
        startloctxt.setText(h.getStartLocation());
        droploctxt.setText(h.getDropLocation());
        
               
                break;
            case "Train":
                
        TrainDirectory traindirec = business.getTrainDirectory();
        Train th = traindirec.getTrain(id);
        idlabel.setText(Integer.toString(th.getId()));
        idtxt.setText(th.getNumber());
        startloctxt.setText(th.getStartLocation());
        droploctxt.setText(th.getDropLocation());
        
               
                break;
                case "Flight":
                
        FlightDirectory flightdirec = business.getFlightDirectory();
        Flight fh = flightdirec.getFlight(id);
        idlabel.setText(Integer.toString(fh.getId()));
        idtxt.setText(fh.getNumber());
        startloctxt.setText(fh.getStartLocation());
        droploctxt.setText(fh.getDropLocation());
        
               
                break;
                case "Cruise":
                
        CruiseDirectory cruisedirec = business.getCruiseDirectory();
        Cruise ch = cruisedirec.getCruise(id);
        idlabel.setText(Integer.toString(ch.getId()));
        idtxt.setText(ch.getNumber());
        startloctxt.setText(ch.getStartLocation());
        droploctxt.setText(ch.getDropLocation());
        
               
                break;
            
            default:
                JOptionPane.showMessageDialog(this, "Please select either bus, train, flight or cruise.");
                return;
        } 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void numtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numtxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JButton confirmupdatebtn;
    private javax.swing.JTextField droploctxt;
    private javax.swing.JLabel idlabel;
    private javax.swing.JTextField idtxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonbus;
    private javax.swing.JButton jButtoncruise;
    private javax.swing.JButton jButtonflight;
    private javax.swing.JButton jButtontrain;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabeltype;
    private javax.swing.JLabel jLabeltype1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField numtxt;
    private javax.swing.JTextField startloctxt;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel records = (DefaultTableModel) jTable1.getModel();
        
        switch(type){
            case "Bus":
                BusDirectory busDirectory = business.getBusDirectory();
                records.setRowCount(0); //Clear empty records

                for(Bus o : busDirectory.getBusList()){
                        Object[] row = new Object[2];
                        row[0] = o.getId();
                        //row[0] = vs.getDate();
                        row[1] = o.getNumber();
                        //row[2] = o.getStartLocation();
                        
                       //row[3] = o.getDropLocation();

                        records.addRow(row);
                }
                break;
                case "Train":
                TrainDirectory trainDirectory = business.getTrainDirectory();
                records.setRowCount(0); //Clear empty records

                for(Train o : trainDirectory.getTrainList()){
                        Object[] row = new Object[2];
                        row[0] = o.getId();
                        //row[0] = vs.getDate();
                        row[1] = o.getNumber();
                       // row[2] = o.getStartLocation();
                        
                      // row[3] = o.getDropLocation();

                        records.addRow(row);
                }
                break;
                case "Flight":
                FlightDirectory flightDirectory = business.getFlightDirectory();
                records.setRowCount(0); //Clear empty records

                for(Flight o : flightDirectory.getFlightList()){
                        Object[] row = new Object[2];
                        row[0] = o.getId();
                        //row[0] = vs.getDate();
                        row[1] = o.getNumber();
                       // row[2] = o.getStartLocation();
                        
                      // row[3] = o.getDropLocation();

                        records.addRow(row);
                }
                break;
            case "Cruise":
                CruiseDirectory cruiseDirectory = business.getCruiseDirectory();
                records.setRowCount(0); //Clear empty records

                for(Cruise o : cruiseDirectory.getCruiseList()){
                        Object[] row = new Object[2];
                        row[0] = o.getId();
                        //row[0] = vs.getDate();
                        row[1] = o.getNumber();
                       // row[2] = o.getStartLocation();
                        
                      // row[3] = o.getDropLocation();

                        records.addRow(row);
                }
                break;
                default:
                JOptionPane.showMessageDialog(this, "Please select either a bus, train, flight, or cruise.");
                return;
        }
    }
}
