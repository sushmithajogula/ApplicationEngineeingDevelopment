/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.SystemAdminWorkArea;

import Project.SmartCity.Establishment.Menu;
import Project.SmartCity.Establishment.MenuItem;
import Project.SmartCity.HealthcareSystem.Hospital;
import Project.SmartCity.HealthcareSystem.HospitalDirectory;
import Project.SmartCity.HealthcareSystem.Pharmacy;
import Project.SmartCity.HealthcareSystem.PharmacyDirectory;
import Project.SmartCity.SmartCity;
import Project.SmartCity.TourismSystem.Aquarium;
import Project.SmartCity.TourismSystem.Beach;
import Project.SmartCity.TourismSystem.BeachDirectory;
import Project.SmartCity.TourismSystem.Garden;
import Project.SmartCity.TourismSystem.Museum;
import Project.SmartCity.TourismSystem.MuseumDirectory;
import Project.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harooniqbal
 */
public class SystemAdminHealthcareModulePanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminHealthcareModulePanel
     */
   private JPanel userProcessContainer;
    private UserAccount userAccount;
    private SmartCity business;
    
    String type="",picPath = "";
    public SystemAdminHealthcareModulePanel(JPanel userProcessContainer, UserAccount account, SmartCity business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        
        idtxt.setEnabled(false);
        nametxt.setEnabled(false);
        loctxt.setEnabled(false);
        //caltxt.setEnabled(true);
        addbtn.setEnabled(false);
        confirmupdatebtn.setEnabled(false); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonbus = new javax.swing.JButton();
        jButtontrain = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabeltype = new javax.swing.JLabel();
        idtxt = new javax.swing.JTextField();
        nametxt = new javax.swing.JTextField();
        addbtn = new javax.swing.JButton();
        confirmupdatebtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabeltype1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        loctxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(242, 228, 199));

        jButtonbus.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/hospbtn.png")); // NOI18N
        jButtonbus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbusActionPerformed(evt);
            }
        });

        jButtontrain.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/pharmacybtn.png")); // NOI18N
        jButtontrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtontrainActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 51));
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 51, 51));
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 51));
        jLabel3.setText("ID:");

        jLabeltype.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabeltype.setForeground(new java.awt.Color(0, 51, 51));
        jLabeltype.setText("Name:");

        idtxt.setForeground(new java.awt.Color(0, 51, 51));
        idtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idtxtActionPerformed(evt);
            }
        });

        nametxt.setForeground(new java.awt.Color(0, 51, 51));
        nametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nametxtActionPerformed(evt);
            }
        });

        addbtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        addbtn.setForeground(new java.awt.Color(0, 51, 51));
        addbtn.setText("Add to List");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        confirmupdatebtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        confirmupdatebtn.setForeground(new java.awt.Color(0, 51, 51));
        confirmupdatebtn.setText("Confirm Update");
        confirmupdatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmupdatebtnActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabeltype1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabeltype1.setForeground(new java.awt.Color(0, 51, 51));
        jLabeltype1.setText("Location:");

        jButton1.setFont(new java.awt.Font(".SF NS Text", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 51, 51));
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        loctxt.setForeground(new java.awt.Color(0, 51, 51));
        loctxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loctxtActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(25, 56, 82));
        jLabel6.setText("SYSTEM ADMIN HEALTHCARE MODULE");

        jLabel10.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/sysadminlogo.png")); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/harooniqbal/Desktop/AEDProjectImages/healthcarebg.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(273, 273, 273)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonbus, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(jButtontrain, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jButton1)
                                .addGap(66, 66, 66)
                                .addComponent(jButton2)
                                .addGap(58, 58, 58)
                                .addComponent(jButton3)))
                        .addGap(149, 149, 149))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addbtn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jLabeltype, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(jLabeltype1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(loctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(confirmupdatebtn)))))
                .addGap(0, 324, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel6)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtontrain, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonbus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabeltype)
                        .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabeltype1)
                        .addComponent(loctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(idtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmupdatebtn)
                    .addComponent(addbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void idtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idtxtActionPerformed

    private void nametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nametxtActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        // TODO add your handling code here:
        String[] location = {"41","90"};
       try{
            
                    switch(type){
            case "Hospital":
                HospitalDirectory hospdirec = business.getHospitalDirectory();
                Hospital h = hospdirec.createHospital(nametxt.getText(), location,userAccount.getUsername());
               
                break;
            case "Pharmacy":
                PharmacyDirectory hosdirec = business.getPharmacyDirectory();
                Pharmacy ph = hosdirec.createPharmacy(nametxt.getText(), location,userAccount.getUsername());
                break;
            
            default:
                JOptionPane.showMessageDialog(this, "Please select either hospital or pharmacy");
                return;
        }
                            
                            nametxt.setText("");
                            idtxt.setText("");
                            loctxt.setText("");
                            //caltxt.setText("");
                           idtxt.setEnabled(false);
        nametxt.setEnabled(false);
        loctxt.setEnabled(false);
        //caltxt.setEnabled(true);
        addbtn.setEnabled(false);
                    }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(this, e);
                        }
                   populateTable();
    }//GEN-LAST:event_addbtnActionPerformed

    private void confirmupdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmupdatebtnActionPerformed
        // TODO add your handling code here:
        String[] location = {"41","90"};
       int selectedRowIndex = jTable1.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be updated.");
            return;
        }

        DefaultTableModel records = (DefaultTableModel) jTable1.getModel();
        String name = (String) records.getValueAt(selectedRowIndex, 1);
        
         switch(type){
            case "Hospital":
                HospitalDirectory hospdirec = business.getHospitalDirectory();
                Hospital h = hospdirec.getHospital(name);
                h.setName(nametxt.getText());
        h.setId(Integer.parseInt(idtxt.getText()));
        h.setLocation(location);
        
               
                break;
            case "Pharmacy":
                PharmacyDirectory hosdirec = business.getPharmacyDirectory();
                Pharmacy ph = hosdirec.getPharmacy(name);
                 ph.setName(nametxt.getText());
        ph.setId(Integer.parseInt(idtxt.getText()));
        ph.setLocation(location);
                break;
            
            default:
                JOptionPane.showMessageDialog(this, "Please select either hospital or pharmacy");
                return;
        }
      
        idtxt.setText("");
                            nametxt.setText("");
                            loctxt.setText("");
                            // caltxt.setText("");
                            idtxt.setEnabled(false);
                            nametxt.setEnabled(false);
                            loctxt.setEnabled(false);
                            //caltxt.setEnabled(false);
                            confirmupdatebtn.setEnabled(false); 
                            populateTable();
    }//GEN-LAST:event_confirmupdatebtnActionPerformed

    private void jButtonbusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbusActionPerformed
        // TODO add your handling code here:
        type = "Hospital";
        populateTable();
    }//GEN-LAST:event_jButtonbusActionPerformed

    private void jButtontrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtontrainActionPerformed
        // TODO add your handling code here:
        type = "Pharmacy";
        populateTable();
    }//GEN-LAST:event_jButtontrainActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        idtxt.setEnabled(true);
        nametxt.setEnabled(true);
        loctxt.setEnabled(true);
        //caltxt.setEnabled(true);
        addbtn.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void loctxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loctxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loctxtActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTable1.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be deleted.");
            return;
        }
        DefaultTableModel records = (DefaultTableModel) jTable1.getModel();
        String name = (String) records.getValueAt(selectedRowIndex, 1);
        switch(type){
            case "Hospital":
                
        HospitalDirectory hosdirec = business.getHospitalDirectory();
        Hospital h = hosdirec.getHospital(name);
        hosdirec.removeHospital(h);
        
               
                break;
            case "Pharmacy":
                
        PharmacyDirectory hospdirec = business.getPharmacyDirectory();
        Pharmacy p = hospdirec.getPharmacy(name);
        hospdirec.removePharmacy(p);
                break;
            
            default:
                JOptionPane.showMessageDialog(this, "Please select either hospital or pharmacy");
                return;
        }
        
        

       
        populateTable();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        idtxt.setEnabled(true);
        nametxt.setEnabled(true);
        loctxt.setEnabled(true);
        //caltxt.setEnabled(true);
        confirmupdatebtn.setEnabled(true);
        int selectedRowIndex = jTable1.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be updated.");
            return;
        }
         DefaultTableModel records = (DefaultTableModel) jTable1.getModel();
        String name = (String) records.getValueAt(selectedRowIndex, 1);
        switch(type){
            case "Hospital":
                
        HospitalDirectory hosdirec = business.getHospitalDirectory();
        Hospital h = hosdirec.getHospital(name);
        idtxt.setText(Integer.toString(h.getId()));
        nametxt.setText(h.getName());
        loctxt.setText(h.getLocation()[0]+"/"+h.getLocation()[1]);
        
               
                break;
            case "Pharmacy":
                
        PharmacyDirectory hospdirec = business.getPharmacyDirectory();
        Pharmacy p = hospdirec.getPharmacy(name);
        idtxt.setText(Integer.toString(p.getId()));
        nametxt.setText(p.getName());
        loctxt.setText(p.getLocation()[0]+"/"+p.getLocation()[1]);
                break;
            
            default:
                JOptionPane.showMessageDialog(this, "Please select either hospital or pharmacy");
                return;
        } 
        
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JButton confirmupdatebtn;
    private javax.swing.JTextField idtxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonbus;
    private javax.swing.JButton jButtontrain;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabeltype;
    private javax.swing.JLabel jLabeltype1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField loctxt;
    private javax.swing.JTextField nametxt;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    DefaultTableModel records = (DefaultTableModel) jTable1.getModel();
        
        switch(type){
            case "Hospital":
                HospitalDirectory hospDirectory = business.getHospitalDirectory();
                records.setRowCount(0); //Clear empty records

                for(Hospital o : hospDirectory.getHospitalList()){
                        Object[] row = new Object[2];
                        row[0] = o.getId();
                        //row[0] = vs.getDate();
                        row[1] = o.getName();
                        //row[2] = o.getLocation()[0]+"/"+o.getLocation()[1];
                       // row[3] = o.getCost();

                        records.addRow(row);
                }
                break;
            case "Pharmacy":
                PharmacyDirectory pharmacyDirectory = business.getPharmacyDirectory();
                records.setRowCount(0); //Clear empty records

                for(Pharmacy o : pharmacyDirectory.getPharmacyList()){
                        Object[] row = new Object[2];
                        row[0] = o.getId();
                        //row[0] = vs.getDate();
                        row[1] = o.getName();
                       // row[2] = o.getLocation()[0]+"/"+o.getLocation()[1];
                        //row[3] = o.getCost();

                        records.addRow(row);
                }
                break;
                default:
                JOptionPane.showMessageDialog(this, "Please select either a hospital or pharmacy.");
                return;
        }
    }
}
